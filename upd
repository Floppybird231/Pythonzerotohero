ef days_to_units(num_of_days, conversion_unit):
    if conversion_unit == "hours":
        return f"{num_of_days} days are {num_of_days * 24} hours"
    elif conversion_unit == "minutes":
        return f"{num_of_days} days are {num_of_days * 24 * 60} minutes"
    else:
        return "unsupported units"


def validate_and_execute():
    try:
        user_input_number = int(days_and_units_dictionnary["days"])
        if user_input_number>0:
            calculated_value = days_to_units(user_input_number, days_and_units_dictionnary["units"])
            print(calculated_value)
        elif user_input_number == 0:
            print("You entered 0, put a valid positive number please")
        else:
            print("You entered a negative number, put a valid positive number please")


    except ValueError:
        print('your input is not a valid number')

user_input = ""
while user_input != "exit":
    user_input = input("Hey user, enter a number of days and unit\n")
    days_and_units= (user_input.split(":"))
    print(days_and_units)
    days_and_units_dictionnary= {"days": days_and_units[0], "unit": days_and_units[1]}
    print(days_and_units_dictionnary)
    validate_and_execute()

